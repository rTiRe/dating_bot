syntax = "proto3";

package dating.service.recommendations;

import "profiles.proto";

service RecommendationsService {
    rpc UpdateProfile(RecommendationsUpdateProfileRequest) returns (RecommendationsUpdateProfileResponse);
    rpc SearchProfiles(RecommendationsSearchProfilesRequest) returns (RecommendationsSearchProfilesResponse);
    rpc UpdateCity(RecommendationsUpdateCityRequest) returns (RecommendationsUpdateCityResponse);
    rpc SearchCities(RecommendationsSearchCitiesRequest) returns (RecommendationsSearchCitiesResponse);
}

message RecommendationsSearchProfilesRequest {
    float lat = 1;
    float lon = 2;
    profiles.Gender gender = 3;
    int32 age = 4;
    int32 distance = 5;
    int32 limit = 6;
    string prefer = 7;
}

message RecommendationsSearchProfilesResponse {
    repeated string profile_ids = 1;
    int32 total = 2;
}

message RecommendationsUpdateProfileRequest {
    string profile_id = 1;
    int32 age = 2;
    profiles.Gender gender = 3;
    oneof coordinates {
        profiles.CityPoint city_point = 4;
        profiles.UserPoint user_point = 5;
    }
    int32 description_len = 6;
    int32 photo_count = 7;
}

message RecommendationsUpdateProfileResponse {
    string profile_id = 1;
    int32 age = 2;
    profiles.Gender gender = 3;
    optional string city_id = 4;
    optional profiles.CityPoint city_point = 5;
    optional profiles.UserPoint user_point = 6;
    string result = 7;
}

message RecommendationsUpdateCityRequest {
    string city_id = 1;
    float lat = 2;
    float lon = 3;
}

message RecommendationsUpdateCityResponse {
    string city_id = 1;
    float lat = 2;
    float lon = 3;
    string result = 4;
}

message RecommendationsSearchCitiesRequest {
    float lat = 1;
    float lon = 2;
    float distance = 3;
    int32 limit = 4;
}

message RecommendationsSearchCitiesResponse {
    repeated string city_ids = 1;
    int32 total = 2;
}
